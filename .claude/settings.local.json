{
  "permissions": {
    "allow": [
      "Bash(npm run dev:*)",
      "mcp__sequential-thinking__sequentialthinking",
      "Bash(pkill:*)",
      "Bash(true)",
      "Bash(git init:*)",
      "Bash(git add:*)",
      "Bash(git config:*)",
      "Bash(git commit:*)",
      "Bash(git push:*)",
      "mcp___21st-dev_magic__21st_magic_component_inspiration",
      "mcp__puppeteer__puppeteer_navigate",
      "WebFetch(domain:www.instagram.com)",
      "WebFetch(domain:digiqo.re)",
      "mcp__playwright__browser_navigate",
      "mcp__fetch-mcp__fetch_html",
      "WebFetch(domain:digiqo.fr)",
      "mcp__playwright__browser_evaluate",
      "mcp__airtable-mcp__list_bases",
      "Bash(npm install:*)",
      "Bash(git reset:*)",
      "Bash(mkdir:*)",
      "Bash(rm:*)",
      "Bash(ls:*)",
      "Bash(mv:*)",
      "Bash(curl:*)",
      "mcp__playwright__browser_navigate_back",
      "mcp__playwright__browser_take_screenshot",
      "mcp__playwright__browser_wait_for",
      "mcp__puppeteer__puppeteer_screenshot",
      "mcp__playwright__browser_resize",
      "mcp__playwright__browser_snapshot",
      "mcp__fetch-mcp__fetch_markdown",
      "Bash(npm run build:*)",
      "Bash(git ls-tree:*)",
      "Bash(find:*)",
      "Bash(killall:*)",
      "Bash(kill:*)",
      "Bash(npx vite:*)",
      "mcp__playwright__browser_click",
      "mcp__playwright__browser_type",
      "WebFetch(domain:localhost)",
      "Bash(npx playwright screenshot:*)",
      "Bash(npx playwright test:*)",
      "Bash(python3:*)",
      "Bash(pip install:*)",
      "Bash(playwright install:*)",
      "WebFetch(domain:69.62.110.246)",
      "Bash(cp:*)",
      "mcp__playwright__browser_console_messages",
      "mcp__playwright__browser_hover",
      "Bash(# Create components for each service page\nservices=(\"\"publicite\"\" \"\"dev-web\"\" \"\"community\"\" \"\"seo\"\" \"\"video\"\" \"\"identite\"\" \"\"audit\"\" \"\"sitekeeper\"\")\n\nfor service in \"\"${services[@]}\"\"; do\n  # Copy the file\n  cp \"\"pages/services/${service}.tsx\"\" \"\"components/ServicePages/${service}.tsx\"\"\n  \n  # Remove GetStaticProps import and export\n  sed -i ''/import { GetStaticProps } from/d'' \"\"components/ServicePages/${service}.tsx\"\"\n  sed -i ''/export const getStaticProps/,/^};$/d'' \"\"components/ServicePages/${service}.tsx\"\"\n  \n  echo \"\"Converted ${service}.tsx\"\"\ndone)",
      "Bash(grep:*)",
      "Bash(node:*)",
      "Bash(sed:*)",
      "mcp__playwright__browser_close",
      "Bash(cat:*)",
      "mcp__airtable-mcp__list_tables",
      "mcp__airtable-mcp__list_records",
      "Bash(npm run lint)",
      "mcp__airtable-mcp__delete_records",
      "mcp__airtable-mcp__update_records",
      "mcp__airtable-mcp__create_record",
      "mcp__airtable-mcp__describe_table",
      "Bash(touch:*)",
      "Bash(npx tsc:*)",
      "Bash(PORT=3000 npm run dev)",
      "mcp___21st-dev_magic__logo_search",
      "Bash(chmod:*)",
      "Bash(python:*)",
      "Bash(command -v:*)",
      "Bash(sudo apt-get:*)",
      "Bash(./scripts/convert-threads-logo-potrace.sh:*)",
      "Bash(bash:*)",
      "Bash(convert:*)",
      "Bash(potrace:*)",
      "Bash(npm run type-check:*)",
      "Bash(identify:*)",
      "Bash(for:*)",
      "Bash(do echo -n \"$img: \")",
      "Bash(echo)",
      "Bash(done)",
      "Bash(wget:*)",
      "Bash(do echo \"=== $file ===\")",
      "Bash(git pull:*)",
      "Bash(npm run generate-sitemap:*)",
      "Bash(git checkout:*)"
    ],
    "deny": []
  }
}